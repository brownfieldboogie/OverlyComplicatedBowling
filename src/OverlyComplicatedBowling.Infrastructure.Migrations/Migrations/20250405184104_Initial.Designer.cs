// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using OverlyComplicatedBowling.Infrastructure.Repositories.MatchRepository;

#nullable disable

namespace OverlyComplicatedBowling.Infrastructure.Migrations.Migrations
{
    [DbContext(typeof(MatchDbContext))]
    [Migration("20250405184104_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OverlyComplicatedBowling.Domain.Games.Game", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Frames")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid?>("MatchId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("MatchId1")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("MatchId");

                    b.HasIndex("MatchId1");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("OverlyComplicatedBowling.Domain.Matches.Match", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("IdOfActiveGame")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("OverlyComplicatedBowling.Domain.Games.Game", b =>
                {
                    b.HasOne("OverlyComplicatedBowling.Domain.Matches.Match", null)
                        .WithMany()
                        .HasForeignKey("MatchId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("OverlyComplicatedBowling.Domain.Matches.Match", null)
                        .WithMany("Games")
                        .HasForeignKey("MatchId1");
                });

            modelBuilder.Entity("OverlyComplicatedBowling.Domain.Matches.Match", b =>
                {
                    b.Navigation("Games");
                });
#pragma warning restore 612, 618
        }
    }
}
