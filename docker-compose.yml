services:
 postgres:
  image: postgres
  expose:
    - 5432
  ports:
    - "15432:5432"
  environment:
    POSTGRES_DB: bowling
    POSTGRES_USER: user
    POSTGRES_PASSWORD: pw
  healthcheck:
    test: ["CMD-SHELL", "pg_isready"]
    interval: 10s
    timeout: 5s
    retries: 5

 overlycomplicatedbowling.infrastructure.migrations:
  depends_on: 
    postgres:
      condition: service_healthy
  build:
   context: .
   dockerfile: src/OverlyComplicatedBowling.Infrastructure.Migrations/Dockerfile

 overlycomplicatedbowling.api:
  depends_on: 
    postgres:
      condition: service_started
    overlycomplicatedbowling.infrastructure.migrations:
      condition: service_started
  environment:
   - ASPNETCORE_ENVIRONMENT=Development
   - ASPNETCORE_HTTP_PORTS=5000
  build:
   context: .
   dockerfile: src/OverlyComplicatedBowling.Presentation.Api/Dockerfile
  ports:
   - "5000:5000"

 overlycomplicatedbowling.web:
  depends_on: 
    overlycomplicatedbowling.api:
      condition: service_started
  environment:
   - ASPNETCORE_ENVIRONMENT=Development
   - ASPNETCORE_HTTP_PORTS=7287
  build:
   context: .
   dockerfile: src/OverlyComplicatedBowling.Presentation.Web/Dockerfile
  ports:
   - "8080:7287"

volumes:
 mongodb:
 mongodb_config: